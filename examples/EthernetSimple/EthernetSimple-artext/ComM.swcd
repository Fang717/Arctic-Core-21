/*-------------------------------- Arctic Core ------------------------------
 * Copyright (C) 2013, ArcCore AB, Sweden, www.arccore.com.
 * Contact: <contact@arccore.com>
 * 
 * You may ONLY use this file:
 * 1)if you have a valid commercial ArcCore license and then in accordance with  
 * the terms contained in the written license agreement between you and ArcCore, 
 * or alternatively
 * 2)if you follow the terms found in GNU General Public License version 2 as 
 * published by the Free Software Foundation and appearing in the file 
 * LICENSE.GPL included in the packaging of this file or here 
 * <http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt>
 *-------------------------------- Arctic Core -----------------------------*/

/* Generator version: 3.0.0
 * AUTOSAR version:   4.0.3
 */

package EthernetSimple_Generic.Services.ComM

import AUTOSAR.Services.ComM.*
import ArcCore.Platform.ImplementationDataTypes.*

// types
/*
records currently not supported by RTE generator, see TOOLS-490
array impl ComM_UserHandleType[1] ComM_UserHandleMaxArrayType
record impl ComM_UserHandleArrayType {
	uint8 numberOfRequesters,
	ComM_UserHandleMaxArrayType handleArray
}

// interfaces
interface senderReceiver service ComM_CurrentChannelRequest {
	// Array of ComMUserIdentifier, that currently hold FULL_COM 
	// requests for this channel. The size of the attribute 
	// fullComRequestors.handleArray is NUM_COMM_USER_PER_CHANNEL 
	data ComM_UserHandleArrayType fullComRequestors
}
*/
// service component according to AutoSAR.
component service ComM {
	ports {
		server UR_ComMUser provides ComM_UserRequest
		sender UM_ComMUser provides ComM_CurrentMode
/*
records currently not supported by RTE generator, see TOOLS-490
		sender CR_ComMChannel provides ComM_CurrentChannelRequest
*/
	}
}

// define service component internal behavior for the RTE.
internalBehavior ComMBehavior for ComM {
	dataTypeMappings {
		ComMTypeMappings
	}
	runnable ComM_MainFunction [0.0] {
		symbol "ComM_MainFunction"
/*
records currently not supported by RTE generator, see TOOLS-490
		dataWriteAccess CR_ComMChannel.fullComRequestors
*/
		modeSwitchPoint UM_ComMUser.currentMode
	}
	runnable concurrent RequestComMode [0.0] {
		symbol "ComM_RequestComMode"
		operationInvokedEvent UR_ComMUser.RequestComMode
	}
	runnable concurrent GetMaxComMode [0.0] {
		symbol "ComM_GetMaxComMode"
		operationInvokedEvent UR_ComMUser.GetMaxComMode
	}
	runnable concurrent GetRequestedComMode [0.0] {
		symbol "ComM_GetRequestedComMode"
		operationInvokedEvent UR_ComMUser.GetRequestedComMode
	}
	runnable concurrent GetCurrentComMode [0.0] {
		symbol "ComM_GetCurrentComMode"
		operationInvokedEvent UR_ComMUser.GetCurrentComMode
	}
	portAPIOption UR_ComMUser {ComM_UserHandleType 0}
}

implementation ComMImpl for ComM.ComMBehavior {
	language c
	codeDescriptor "src"
	vendorId 60
}
